version: 2
jobs: # basic units of work in a run
  build: # runs not using Workflows must have a `build` job as entry point
    docker: # run the steps with Docker
      # CircleCI Go images available at: https://hub.docker.com/r/circleci/golang/
      - image: cimg/go:1.17
    environment: # environment variables for the build itself
      TEST_RESULTS: /tmp/test-results # path to where test results will be saved
      BIN_RESULTS: /tmp/bin

    parallelism: 1
    steps: # steps that comprise the `build` job
      - checkout # check out source code to working directory
      - run:
          name: prep
          command: |
            mkdir -p $TEST_RESULTS
            mkdir -p $BIN_RESULTS 
            date +%F | tee /tmp/daily-date

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-mod-v4-{{ checksum "go.sum" }}

      - restore_cache: # restores saved cache if no changes are detected since last run
          keys:
            - go-cache-v4-{{ checksum "/tmp/daily-date" }}

      - run:
          name: Run unit tests
          # store the results of our tests in the $TEST_RESULTS directory
          command: |
            gotestsum --junitfile ${TEST_RESULTS}/gotestsum-report.xml -- $(go list ./... | grep -v pkg/scaling/cache | grep -v controllers/keda )

      - run:
          name: Go mod download
          command: go mod download

      - save_cache:
          key: go-mod-v4-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: build
          command: |
            go build -o $BIN_RESULTS/keda
            mkdir -p /tmp/cache_date
            echo date

      - save_cache:
          key: go-cache-v4-{{ checksum "/tmp/daily-date" }}
          paths:
            - ~/.cache/go-build

      - store_test_results: # upload test results for display in Test Summary
          path: /tmp/test-results

workflows:
  version: 2
  build-workflow:
    jobs:
      - build
